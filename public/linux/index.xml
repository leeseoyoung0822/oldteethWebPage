<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux on team page</title>
    <link>https://leeseoyoung0822.github.io/teamWebPage/linux/</link>
    <description>Recent content in Linux on team page</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 28 May 2023 21:49:20 +0200</lastBuildDate><atom:link href="https://leeseoyoung0822.github.io/teamWebPage/linux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>LINUX 역사</title>
      <link>https://leeseoyoung0822.github.io/teamWebPage/linux/linked-post/</link>
      <pubDate>Sun, 28 May 2023 21:49:20 +0200</pubDate>
      
      <guid>https://leeseoyoung0822.github.io/teamWebPage/linux/linked-post/</guid>
      <description>역사 2.1. 초기 1991년 당시 핀란드 헬싱키 공대 대학생이었던 리누스 토르발스가 미닉스 OS를 사용하는 컴퓨터에서 작업해서 만들었다. 참고 기사 미닉스를 쓰면서 마음에 안 드는 점이 있을 때마다 커널에 여러 가지 기능을 추가했고, 어느새 운영체제에 가까울 정도로 기능이 늘어났다.
리누스는 이 커널을 처음 릴리스 할 때, 무료이니 &amp;lsquo;Free&amp;rsquo;, 매니아이니 &amp;lsquo;Freak&amp;rsquo;, 그리고 Unix와 유사하니 &amp;lsquo;x&amp;rsquo;를 조합해 &amp;lsquo;Freax&amp;rsquo;라고 부르길 원했다고 한다. 그러나 FTP 서버에 소스 파일을 업로드해줬던 아리 렘케는 차라리 리누스가 개발했으니 &amp;lsquo;리눅스&amp;rsquo;라고 부르는 게 낫겠다 싶어 리누스의 허락 없이(&amp;hellip;) 이름을 &amp;lsquo;리눅스&amp;rsquo;로 바꿨고, 리누스도 이 이름이 마음에 들어 새 운영체제의 이름은 리눅스로 확정됐다.</description>
    </item>
    
    <item>
      <title>LINUX 명령어</title>
      <link>https://leeseoyoung0822.github.io/teamWebPage/linux/categories-post/</link>
      <pubDate>Sun, 28 May 2023 21:29:20 +0200</pubDate>
      
      <guid>https://leeseoyoung0822.github.io/teamWebPage/linux/categories-post/</guid>
      <description>필수 명령어들 요약
 ls - 현재 위치의 파일 목록 조회 cd - 디렉터리 이동 touch - 0바이트 파일 생성, 파일의 날짜와 시간을 수정 mkdir - 디렉터리 생성 cp - 파일 복사 mv - 파일 이동 rm - 파일 삭제 cat - 파일의 내용을 화면에 출력, 리다이렉션 기호(&#39;&amp;gt;&#39;)를 사용하여 새로운 파일 생성 redirection - 화면의 출력 결과를 파일로 저장 alias - 자주 사용하는 명령어들을 별명으로 정의하여 쉽게 사용할 수 있도록 설정  🔎 명령어 옵션과 설명</description>
    </item>
    
    <item>
      <title>Go is for lovers</title>
      <link>https://leeseoyoung0822.github.io/teamWebPage/linux/go-is-for-lovers/</link>
      <pubDate>Thu, 17 Sep 2015 13:47:08 +0200</pubDate>
      
      <guid>https://leeseoyoung0822.github.io/teamWebPage/linux/go-is-for-lovers/</guid>
      <description>Hugo uses the excellent go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in go templates.
This document is a brief primer on using go templates.</description>
    </item>
    
    <item>
      <title>Hugo is for lovers</title>
      <link>https://leeseoyoung0822.github.io/teamWebPage/linux/hugo-is-for-lovers/</link>
      <pubDate>Mon, 03 Aug 2015 13:39:46 +0200</pubDate>
      
      <guid>https://leeseoyoung0822.github.io/teamWebPage/linux/hugo-is-for-lovers/</guid>
      <description>This is the summary Goto &lt;a href=&#34;https://github.com/spf13/hugo/releases&#34;&gt;hugo releases&lt;/a&gt; and download the appropriate version for your os and architecture. Save it somewhere specific as we will be using it in the next step. More complete instructions are available at &lt;a href=&#34;https://leeseoyoung0822.github.io/teamWebPage/overview/installing/&#34;&gt;installing hugo&lt;/a&gt;</description>
    </item>
    
    <item>
      <title>Creating a new theme</title>
      <link>https://leeseoyoung0822.github.io/teamWebPage/linux/creating-a-new-theme/</link>
      <pubDate>Wed, 24 Jun 2015 13:50:46 +0200</pubDate>
      
      <guid>https://leeseoyoung0822.github.io/teamWebPage/linux/creating-a-new-theme/</guid>
      <description>Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description>
    </item>
    
    <item>
      <title>Migrate from Jekyll</title>
      <link>https://leeseoyoung0822.github.io/teamWebPage/linux/migrate-from-jekyll/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://leeseoyoung0822.github.io/teamWebPage/linux/migrate-from-jekyll/</guid>
      <description>Move static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
▾ &amp;lt;root&amp;gt;/ ▾ images/ logo.png  should become
▾ &amp;lt;root&amp;gt;/ ▾ static/ ▾ images/ logo.png  Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.</description>
    </item>
    
  </channel>
</rss>
